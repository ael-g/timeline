{"version":3,"sources":["Timeline.tsx","config/firebase.ts","Menu.tsx","Footer.tsx","Header.tsx","TimelineListSelector.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Timeline","params","people","unit","items","max","reduce","acc","val","deathDate","min","bornDate","Math","floor","ceil","getTimelineRange","s","centuries","c","id","width","left","push","year","computeCenturies","periods","i","length","item","marginTop","name","start","end","computePeople","style","position","map","className","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","Menu","timelineId","useParams","useState","picture","selectedPeople","setPeople","setSelectedTimelineList","useEffect","getTimelineList","a","collection","doc","get","p","onSelectTimeList","data","getPeople","timelineList","where","col","docs","e","display","flexDirection","Paper","overflow","maxHeight","text","List","ListItem","button","onClick","console","log","flex","ListItemText","primary","color","Footer","Divider","href","Header","TimelineListSelector","timelineLists","setTimelineList","getTimelineLists","orderBy","alignItems","justifyContent","elevation","window","location","assign","Typography","fontSize","App","basename","process","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26bc726e.chunk.js","sourcesContent":["import './Timeline.css'\nimport {People} from './types'\n\ntype TimelineParams = {\n  people: People[]\n}\n\nfunction Timeline(params: TimelineParams) {\n  const { people } = params;\n\n  const unit = 25\n\n  const getTimelineRange = (items :People[]) => {  \n    const max = items.reduce((acc, val) => val.deathDate > acc ? val.deathDate:acc, -10000)\n    const min = items.reduce((acc, val) => val.bornDate < acc ? val.bornDate:acc, 10000)\n\n    // Computing the range to include boundaring centuries\n    return {'min': Math.floor(min/unit)*unit, 'max': Math.ceil(max/unit)*unit}\n  }\n\n  const computeCenturies = (min:number, max:number) => {\n    let centuries = []\n\n    for(let c=min ; c<max ; c+=unit) {\n      const id = (c - min) / unit\n      const width = 100 / ( (max - min)/unit)\n      const left = width * id\n      centuries.push({id, width, left, year: c})\n    }\n    return centuries\n  }\n\n  const computePeriods = (items: any, min: number, max: number) => {\n    let periods = []\n\n    for(const item of items) {\n      const width = 100 * (item.end - item.start) / (max - min)\n      const left = 100 * (item.start - min) / (max - min)\n      periods.push({width, left, name: item.name, start: item.start, end: item.end})\n    }\n\n    return periods\n  }\n\n  const computePeople = (items: any, min: number, max: number) => {\n    let people = []\n\n    for(let i=0 ; i< items.length ; i++) {\n      const item = items[i]\n      const width = 100 * (item.deathDate - item.bornDate) / (max - min)\n      const left = 100 * (item.bornDate - min) / (max - min)\n      const marginTop = 4 + ((80 * i)/items.length)\n      people.push({width, left, name: item.name, start: item.bornDate, end: item.deathDate, marginTop})\n    }\n\n    return people\n  }\n\n  const {min, max} = getTimelineRange(people);\n  const centuries = computeCenturies(min, max);\n  const peopleComputed = computePeople(people, min, max);\n  const s = {min, max, centuries, periods:[], people: peopleComputed};\n\n  return (\n    <div style={{position: 'absolute', width: '80%'}}>\n      {\n        s.centuries.map(c => \n          <a key={c.year} className=\"Centuries\" style={{width: `${c.width}%`, left: `${c.left}%`}}>{c.year}</a>\n        )\n      }\n      {/* {\n        s.periods.map(i => \n          <a key={i.name} className=\"Periods\" style={{width: `${i.width}%`, left: `${i.left}%`}}><div className=\"Left\">{i.start}</div><div className=\"Centered\">{i.name}</div><div className=\"Right\">{i.end}</div></a>\n        )\n      } */}\n      {\n        s.people.map(i => \n          <a key={i.name} className=\"People\" style={{width: `${i.width}%`, left: `${i.left}%`, \"marginTop\": `${i.marginTop}vh`}}><div className=\"Left\">{i.start}</div><div className=\"Centered\">{i.name}</div><div className=\"Right\">{i.end}</div></a>\n        )\n      }\n    </div>\n  );\n}\n\nexport default Timeline;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAMtqF0uh_sVeM7DI4JcIqAoTBLlbTmwiQ\",\n    authDomain: \"aelg-test.firebaseapp.com\",\n    databaseURL: \"https://aelg-test.firebaseio.com\",\n    projectId: \"aelg-test\",\n    storageBucket: \"aelg-test.appspot.com\",\n    messagingSenderId: \"235970089357\",\n    appId: \"1:235970089357:web:08c07410f7554dda2b6dc4\",\n    measurementId: \"G-L6NLVB99Y9\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\nconst db=firebase.firestore();\n\nexport default db;","import {useEffect, useState} from 'react'\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport db from './config/firebase';\n// import admin from 'firebase-admin';\n// import {quattrocento} from './quattrocento'\nimport {People, TimelineList} from './types';\nimport {\n  useParams,\n} from \"react-router-dom\";\n\nfunction createDefaultPeople() :People {\n    return {id: \"\", name: \"\", picture: \"\", bornDate: 1800, deathDate: 1900}\n}\n\ntype MenuParams = {\n    people: People[];\n    setPeople: Function;\n}\n\ntype TimelineParams = {\n    timelineId: string;\n}\n\nfunction Menu(params: MenuParams) {\n    const { timelineId } = useParams<TimelineParams>();\n     \n    const[selectedPeople, setSelectedPeople] = useState<People>(createDefaultPeople());\n    let selectedPeopleModified = {...selectedPeople}\n    // const[people, setPeople] = useState<Array<People>>([]);\n    const { people, setPeople } = params;\n\n    const[timelineList, setTimelineList] = useState<Array<TimelineList>>([]);\n    const[selectedTimelineList, setSelectedTimelineList] = useState<TimelineList>({id: '', name: ''});\n\n    useEffect(() => {\n        // getTimelineLists();\n        getTimelineList(timelineId);\n    }, []);\n\n    const getTimelineList = async (id: string) => {\n        const p = await db.collection('timelineLists').doc(id).get();\n        onSelectTimeList({id: p.id, ...p.data()} as TimelineList);\n    }\n\n    const getTimelineLists = async () => {\n        const col = await db.collection('timelineLists').orderBy('name').get();\n        const timelineLists = col.docs.map(p => {return {id: p.id, ...p.data()} as TimelineList})\n        setTimelineList(timelineLists);\n    }\n\n    const getPeople = async (timelineList: TimelineList) => {        \n        const col = await db.collection('people').where('timelineLists', 'array-contains-any', [timelineList.id]).get();\n        const people = col.docs.map(p => {return {id: p.id, ...p.data()} as People})\n        setPeople(people);\n    }\n\n    const onSelectPeople = (e: string) => {\n        console.log(e)\n    }\n\n    const onSelectTimeList = (e: TimelineList) => {\n        setSelectedTimelineList(e);\n        getPeople(e);\n    }\n\n    const onAssociatePeople = async () => {\n        // quattrocento.people.forEach(async p => {\n        //     const ok = {\n        //         name: p.name, \n        //         bornDate: p.start, \n        //         deathDate: p.end,\n        //         timelineLists: [\"mD2h19N9CnUDxXG6N8PJ\"]\n        //     }\n        //     const ref = await db.collection('people').add(ok)\n        // })\n            // const col = await db.collection('people').where('timelineLists', 'array-contains-any', [\"mD2h19N9CnUDxXG6N8PJ\"]).get();\n            // const people = col.docs.map(p => {return {id: p.id, ...p.data()} as People})    \n            // people.forEach(async p => {\n            //     await db.collection('people').doc(p.id).delete()\n            // })\n    }\n\n    const onDeletePeople = async (id: string) => {\n        console.log(\"On delete\")\n        // await db.collection('people').doc(id).delete()\n        // await getPeople()\n    }\n      \n    return (\n    <div style={{display: \"flex\", flexDirection: \"column\"}}>\n        <Paper style={{overflow: 'auto', maxHeight: '85vh'}}>\n            {people.map((text) => (\n                <List>\n                <ListItem button id={text.name} onClick={() => onSelectPeople(text.name)} key={text.name}>\n                    <div style={{display: 'flex', flexDirection: 'row', flex: '0 0 100%'}}>\n                        <div style={{flex: '0 0 80%'}}>\n                            <ListItemText primary={text.name} />\n                            <ListItemText style={{color: 'grey'}} primary={`${text.bornDate} - ${text.deathDate}`} />\n                        </div>\n                    </div>\n                </ListItem>\n                </List>\n            ))}\n        </Paper>\n    </div>\n    )\n}\n\nexport default Menu;","import Divider from '@material-ui/core/Divider';\nimport './Footer.css'\n\nexport default function Footer() {\n\n    return (\n        <div className=\"Footer\">\n            <Divider/>\n            Credits to Laurent Houmeau from <a href=\"https://soclassiq.com\">soclassiq.com</a> for the original timeline style\n        </div>\n    )\n}","import Divider from '@material-ui/core/Divider';\n\nexport default function Header() {\n\n    return (\n        <div>\n            <div className=\"Header\">\n                TimelinesJS\n            </div>\n            <Divider/>\n        </div>\n    )\n}","import { Paper, List, ListItem, ListItemText, Typography } from \"@material-ui/core\";\nimport {useEffect, useState} from 'react'\nimport db from './config/firebase';\nimport {TimelineList} from './types';\n\ntype TimelineListSelectorParams = {\n    timelineLists: TimelineList[];\n    setTimelineList: Function;\n}\n\nexport default function TimelineListSelector(params: TimelineListSelectorParams) {\n    const {timelineLists, setTimelineList} = params;\n    const[selectedTimelineList, setSelectedTimelineList] = useState<TimelineList>({id: '', name: ''});\n\n    useEffect(() => {\n        getTimelineLists();\n    }, []);\n\n    const getTimelineLists = async () => {\n        const col = await db.collection('timelineLists').orderBy('name').get();\n        const timelineLists = col.docs.map(p => {return {id: p.id, ...p.data()} as TimelineList})\n        setTimelineList(timelineLists);\n    }\n\n    const onSelectTimeList = (e: TimelineList) => {\n        window.location.assign(`/timelines/${e.id}`);\n        // setSelectedTimelineList(e);\n        // getPeople(e);\n    }\n\n    return (\n        <div style={{\n            display: \"flex\",\n            marginTop: \"30vh\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n        }}>\n        <Paper elevation={2}>\n            <List>\n            {timelineLists.map((text) => (\n                <ListItem button id={text.name} onClick={() => onSelectTimeList(text)} key={text.name}>\n                    <ListItemText primary={<Typography style={{fontSize: \"x-large\"}}>{text.name}</Typography>}/>\n                </ListItem>\n            ))}\n            </List>\n        </Paper>\n        </div>\n    )\n}","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport {useState} from 'react'\nimport Timeline from './Timeline';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport Header from './Header';\nimport TimelineListSelector from './TimelineListSelector'\nimport {People, TimelineList} from './types';\n\n\nfunction App() {\n\n  const[people, setPeople] = useState<Array<People>>([]);\n  const[timelineLists, setTimelineList] = useState<Array<TimelineList>>([]);\n\n  return (\n  <Router basename={process.env.PUBLIC_URL}>\n    <div className=\"App\">\n      <Header/>\n      <Switch>\n        <Route path=\"/timelines/:timelineId\">\n          <div className=\"Main\">\n            <div>\n              <Menu setPeople={setPeople} people={people}/>\n            </div>\n            <div>\n              <Timeline people={people}/>\n            </div>\n          </div>\n        </Route>\n        <Route path=\"/\">\n          <TimelineListSelector setTimelineList={setTimelineList} timelineLists={timelineLists}/>\n        </Route>\n      </Switch>\n\n      <div>\n        <Footer/>\n      </div>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}