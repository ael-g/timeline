{"version":3,"sources":["Timeline.js","App.js","reportWebVitals.js","index.js"],"names":["Timeline","useState","centuries","periods","people","state","setState","useEffect","fetch","process","then","response","json","data","items","max","reduce","acc","val","end","min","start","Math","floor","ceil","getTimelineRange","concat","c","id","width","left","push","year","computeCenturies","item","name","computePeriods","i","length","marginTop","computePeople","className","map","href","style","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.763da16d.chunk.js","sourcesContent":["import {useEffect, useState} from 'react'\nimport './Timeline.css'\n\nfunction Timeline() {\n  const [state, setState] = useState({\n    centuries: [],\n    periods: [],\n    people: []\n  });\n\n  const getTimelineRange = (items) => {  \n    const max = items.reduce((acc, val) => val.end > acc ? val.end:acc, 0)\n    const min = items.reduce((acc, val) => val.start < acc ? val.start:acc, 10000)\n\n    // Computing the range to include boundaring centuries\n    return {'min': Math.floor(min/100)*100, 'max': Math.ceil(max/100)*100}\n  }\n\n  const computeCenturies = (min, max) => {\n    let centuries = []\n\n    for(let c=min ; c<max ; c+=100) {\n      const id = (c - min) / 100\n      const width = 100 / ( (max - min)/100)\n      const left = width * id\n      centuries.push({id, width, left, year: c})\n    }\n    return centuries\n  }\n\n  const computePeriods = (items, min, max) => {\n    let periods = []\n\n    for(const item of items) {\n      const width = 100 * (item.end - item.start) / (max - min)\n      const left = 100 * (item.start - min) / (max - min)\n      periods.push({width, left, name: item.name, start: item.start, end: item.end})\n    }\n\n    return periods\n  }\n\n  const computePeople = (items, min, max) => {\n    let people = []\n\n    // const minPeople = items.reduce((acc, val) => val.start < acc ? val.start:acc, 100000)\n\n    for(let i=0 ; i< items.length ; i++) {\n      const item = items[i]\n      const width = 100 * (item.end - item.start) / (max - min)\n      const left = 100 * (item.start - min) / (max - min)\n      const marginTop = 12 + ((38 * i)/items.length)\n      people.push({width, left, name: item.name, start: item.start, end: item.end, marginTop})\n    }\n\n    return people\n  }\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/items.json`)\n        .then(response => response.json())\n        .then((data) => {\n            const {min, max} = getTimelineRange(data.periods.concat(data.people));\n            const centuries = computeCenturies(min, max);\n            const periods = computePeriods(data.periods, min, max);\n            const people = computePeople(data.people, min, max);\n\n            const s = {min, max, centuries, periods, people};\n            setState(s);\n        });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {\n        state.centuries.map(c => \n          <a href='' key={c.year} className=\"Centuries\" style={{width: `${c.width}%`, left: `${c.left}%`}}>{c.year}</a>\n        )\n      }\n      {\n        state.periods.map(i => \n          <a href='' key={i.start} className=\"Periods\" style={{width: `${i.width}%`, left: `${i.left}%`}}><div className=\"Left\">{i.start}</div><div className=\"Centered\">{i.name}</div><div className=\"Right\">{i.end}</div></a>\n        )\n      }\n      {\n        state.people.map(i => \n          <a href='' key={i.start} className=\"People\" style={{width: `${i.width}%`, left: `${i.left}%`, \"marginTop\": `${i.marginTop}%`}}><div className=\"Left\">{i.start}</div><div className=\"Centered\">{i.name}</div><div className=\"Right\">{i.end}</div></a>\n        )\n      }\n    </div>\n  );\n}\n\n\n\nexport default Timeline;\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport Timeline from './Timeline';\n\nfunction App() {\n  return (\n  <Router basename={process.env.PUBLIC_URL}>\n    <div className=\"App\">\n      <Timeline/>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}