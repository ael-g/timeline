{"version":3,"sources":["config/firebase.ts","Timeline.tsx","Menu.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","Timeline","useState","centuries","periods","people","state","setState","getTimelineRange","items","max","reduce","acc","val","deathDate","min","bornDate","Math","floor","ceil","computeCenturies","c","id","width","left","push","year","computePeople","i","length","item","marginTop","name","start","end","getPeople","a","collection","get","col","docs","map","p","data","useEffect","console","log","style","position","className","Menu","picture","selectedPeople","setSelectedPeople","selectedPeopleModified","setPeople","orderBy","onSubmitPeople","where","add","onDeletePeople","List","display","flexDirection","height","TextField","onChange","e","target","value","label","type","Button","variant","color","onClick","Paper","overflow","maxHeight","text","ListItem","button","flex","ListItemText","primary","Divider","App","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68dea7d4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAMtqF0uh_sVeM7DI4JcIqAoTBLlbTmwiQ\",\n    authDomain: \"aelg-test.firebaseapp.com\",\n    databaseURL: \"https://aelg-test.firebaseio.com\",\n    projectId: \"aelg-test\",\n    storageBucket: \"aelg-test.appspot.com\",\n    messagingSenderId: \"235970089357\",\n    appId: \"1:235970089357:web:08c07410f7554dda2b6dc4\",\n    measurementId: \"G-L6NLVB99Y9\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\nconst db=firebase.firestore();\n\nexport default db;","import {useEffect, useState} from 'react'\nimport db from './config/firebase';\nimport './Timeline.css'\nimport {GenericTimelineObject, People} from './types'\n\nfunction Timeline() {\n  const [state, setState] = useState<{\n    centuries: Array<GenericTimelineObject>,\n    periods: Array<GenericTimelineObject>,\n    people: Array<GenericTimelineObject>\n   }>({\n    centuries: [],\n    periods: [],\n    people: []\n  });\n\n  const getTimelineRange = (items :People[]) => {  \n    const max = items.reduce((acc, val) => val.deathDate > acc ? val.deathDate:acc, 0)\n    const min = items.reduce((acc, val) => val.bornDate < acc ? val.bornDate:acc, 10000)\n\n    // Computing the range to include boundaring centuries\n    return {'min': Math.floor(min/100)*100, 'max': Math.ceil(max/100)*100}\n  }\n\n  const computeCenturies = (min:number, max:number) => {\n    let centuries = []\n\n    for(let c=min ; c<max ; c+=100) {\n      const id = (c - min) / 100\n      const width = 100 / ( (max - min)/100)\n      const left = width * id\n      centuries.push({id, width, left, year: c})\n    }\n    return centuries\n  }\n\n  const computePeriods = (items: any, min: number, max: number) => {\n    let periods = []\n\n    for(const item of items) {\n      const width = 100 * (item.end - item.start) / (max - min)\n      const left = 100 * (item.start - min) / (max - min)\n      periods.push({width, left, name: item.name, start: item.start, end: item.end})\n    }\n\n    return periods\n  }\n\n  const computePeople = (items: any, min: number, max: number) => {\n    let people = []\n\n    for(let i=0 ; i< items.length ; i++) {\n      const item = items[i]\n      const width = 100 * (item.deathDate - item.bornDate) / (max - min)\n      const left = 100 * (item.bornDate - min) / (max - min)\n      const marginTop = 4 + ((60 * i)/items.length)\n      people.push({width, left, name: item.name, start: item.bornDate, end: item.deathDate, marginTop})\n    }\n\n    return people\n  }\n\n  const getPeople = async () => {\n    const col = await db.collection('people').get();\n    return col.docs.map(p => {return {id: p.id, ...p.data()} as People})\n  }\n\n  useEffect(() => {\n    ( async () => {\n      const data = await getPeople()\n      const {min, max} = getTimelineRange(data);\n      const centuries = computeCenturies(min, max);\n      const people = computePeople(data, min, max);\n      const s = {min, max, centuries, periods:[], people};\n      setState(s as any);\n      console.log(data)\n    })()\n  }, []);\n\n  return (\n    <div style={{position: 'absolute', width: '80%'}}>\n      {\n        state.centuries.map(c => \n          <a key={c.year} className=\"Centuries\" style={{width: `${c.width}%`, left: `${c.left}%`}}>{c.year}</a>\n        )\n      }\n      {\n        state.periods.map(i => \n          <a key={i.name} className=\"Periods\" style={{width: `${i.width}%`, left: `${i.left}%`}}><div className=\"Left\">{i.start}</div><div className=\"Centered\">{i.name}</div><div className=\"Right\">{i.end}</div></a>\n        )\n      }\n      {\n        state.people.map(i => \n          <a key={i.name} className=\"People\" style={{width: `${i.width}%`, left: `${i.left}%`, \"marginTop\": `${i.marginTop}%`}}><div className=\"Left\">{i.start}</div><div className=\"Centered\">{i.name}</div><div className=\"Right\">{i.end}</div></a>\n        )\n      }\n    </div>\n  );\n}\n\nexport default Timeline;\n","import {useEffect, useState} from 'react'\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport db from './config/firebase';\nimport {People} from './types';\n\nfunction createDefaultPeople() :People {\n    return {id: \"\", name: \"\", picture: \"\", bornDate: 1800, deathDate: 1900}\n}\n\nfunction Menu() {\n    const[selectedPeople, setSelectedPeople] = useState<People>(createDefaultPeople());\n    let selectedPeopleModified = {...selectedPeople}\n    \n    const[people, setPeople] = useState<Array<People>>([]);\n\n    useEffect(() => {\n        getPeople();\n    }, []);\n\n    const getPeople = async () => {\n        const col = await db.collection('people').orderBy('name').get();\n        const people = col.docs.map(p => {return {id: p.id, ...p.data()} as People})\n        setPeople(people);\n    }\n\n    const onSelectPeople = (e: string) => {\n        console.log(e)\n    }\n\n    const onSubmitPeople = async () => {\n        const p = selectedPeopleModified\n        if(p.name && p.bornDate && p.deathDate) {\n            const existing = await db.collection('people').where('name', '==', p.name).get();\n            if(!existing.docs.length) {\n                console.log(\"Creatingg\")\n                await db.collection('people').add(p);\n                await getPeople()\n            }\n        } \n    }\n\n    const onDeletePeople = async (id: string) => {\n        console.log(\"On delete\")\n        // await db.collection('people').doc(id).delete()\n        // await getPeople()\n    }\n      \n    return (\n    <List style={{display: \"flex\", flexDirection: \"column\", height: '97vh'}}>\n        <div style={{display: \"flex\", flexDirection: \"column\"}}>\n            <TextField id=\"name\" onChange={(e:any) => {selectedPeopleModified.name=e.target.value; setSelectedPeople(selectedPeopleModified)}} label=\"Name\" value={selectedPeople.name}/>\n            <TextField id=\"bornDate\" onChange={(e:any) => {selectedPeopleModified.bornDate=e.target.value; setSelectedPeople(selectedPeopleModified)}} label=\"Born date\" type=\"number\" value={selectedPeople.bornDate}/>\n            <TextField id=\"deathDate\" onChange={(e:any) => {selectedPeopleModified.deathDate=e.target.value; setSelectedPeople(selectedPeopleModified)}} label=\"Death date\" type=\"number\" value={selectedPeople.deathDate}/>\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmitPeople}>Add</Button>\n        </div>\n        <Paper style={{overflow: 'auto', maxHeight: '100%'}}>\n        {people.map((text) => (\n            <div>\n            <ListItem button id={text.name} onClick={() => onSelectPeople(text.name)} key={text.name}>\n                <div style={{display: 'flex', flexDirection: 'row', flex: '0 0 100%'}}>\n                    <div style={{flex: '0 0 80%'}}>\n                        <ListItemText primary={text.name} />\n                        <ListItemText style={{color: 'grey'}} primary={`${text.bornDate} - ${text.deathDate}`} />\n                    </div>\n                    <div>\n                        <DeleteIcon onClick={(e:any) => onDeletePeople(text.id)}></DeleteIcon>\n                    </div>\n                </div>\n            </ListItem>\n            <Divider/>\n            </div>\n        ))}\n        </Paper>\n    </List>\n    )\n}\n\nexport default Menu;","import './App.css';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport Timeline from './Timeline';\nimport Menu from './Menu';\n\nfunction App() {\n  return (\n  <Router basename={process.env.PUBLIC_URL}>\n    <div className=\"App\">\n      <div>\n        <Menu/>\n      </div>\n      <div>\n        <Timeline/>\n      </div>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}